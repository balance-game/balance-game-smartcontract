{
	"id": "5f4f9b26f1b6f90bd1fab25b0043e617",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"BalanceGame.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract BalanceGame is Ownable(msg.sender) { \r\n    enum VoteOpttion { A, B }\r\n\r\n    struct Game {\r\n        uint256 id;\r\n        string questionA;\r\n        string questionB;\r\n        mapping (address => VoteOpttion) votes;\r\n        uint256 voteCountA;\r\n        uint256 voteCountB;\r\n        address creator;\r\n    }\r\n\r\n    mapping (uint256 => Game) public findGameById;\r\n    mapping (address => bool) public whiteList;\r\n\r\n    event NewGame(uint256 indexed gameId);\r\n    event NewVote(uint256 indexed gameId, uint256 indexed votedAddress, VoteOpttion indexed voteOpttion);\r\n    event WhiteListUpdate(address indexed, bool status);\r\n\r\n    modifier onlyWhitelisted {\r\n        require(whiteList[msg.sender], \"OnlyWhitelisted\");\r\n        _;\r\n    }\r\n\r\n    modifier etherCheck {   \r\n        require(msg.value > 10000 wei, \"Not Enough Ether\");\r\n        _;\r\n    }\r\n} "
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BalanceGame.sol": {
				"BalanceGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								}
							],
							"name": "NewGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "gameId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "votedAddress",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "enum BalanceGame.VoteOpttion",
									"name": "voteOpttion",
									"type": "uint8"
								}
							],
							"name": "NewVote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "WhiteListUpdate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "findGameById",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "questionA",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "questionB",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "voteCountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "voteCountB",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BalanceGame.sol\":116:971  contract BalanceGame is Ownable(msg.sender) { ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"BalanceGame.sol\":148:158  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_4\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"BalanceGame.sol\":116:971  contract BalanceGame is Ownable(msg.sender) { ... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_11:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_12:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_17\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_13:\n    /* \"#utility.yul\":328:352   */\n  tag_19\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_6:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_21\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_13\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"BalanceGame.sol\":116:971  contract BalanceGame is Ownable(msg.sender) { ... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BalanceGame.sol\":116:971  contract BalanceGame is Ownable(msg.sender) { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x372c12b1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf24f9459\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"BalanceGame.sol\":489:531  mapping (address => bool) public whiteList */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BalanceGame.sol\":437:482  mapping (uint256 => Game) public findGameById */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"BalanceGame.sol\":489:531  mapping (address => bool) public whiteList */\n    tag_11:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_30\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BalanceGame.sol\":437:482  mapping (uint256 => Game) public findGameById */\n    tag_23:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_38\n      swap1\n      tag_37\n      jump\t// in\n    tag_38:\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_40\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_39)\n    tag_40:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_41:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_41\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_42\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_43\n      swap1\n      tag_37\n      jump\t// in\n    tag_43:\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_45\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_44)\n    tag_45:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_46:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_46\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_17\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_57\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_63:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_65:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_66:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_88\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_65\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_67:\n        /* \"#utility.yul\":641:665   */\n      tag_90\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_66\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_91:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_68:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_93\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_67\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_96\n      tag_63\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":917:1036   */\n    tag_95:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_97\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_68\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_69:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_70:\n        /* \"#utility.yul\":1353:1374   */\n      tag_100\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_69\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_13:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_102\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_70\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_71:\n        /* \"#utility.yul\":1690:1714   */\n      tag_104\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_66\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_19:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_106\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_71\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2032   */\n    tag_72:\n        /* \"#utility.yul\":1992:1999   */\n      0x00\n        /* \"#utility.yul\":2021:2026   */\n      dup2\n        /* \"#utility.yul\":2010:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2160   */\n    tag_73:\n        /* \"#utility.yul\":2111:2135   */\n      tag_109\n        /* \"#utility.yul\":2129:2134   */\n      dup2\n        /* \"#utility.yul\":2111:2135   */\n      tag_72\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2104:2109   */\n      dup2\n        /* \"#utility.yul\":2101:2136   */\n      eq\n        /* \"#utility.yul\":2091:2154   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2150:2151   */\n      0x00\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2152   */\n      revert\n        /* \"#utility.yul\":2091:2154   */\n    tag_110:\n        /* \"#utility.yul\":2038:2160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2305   */\n    tag_74:\n        /* \"#utility.yul\":2212:2217   */\n      0x00\n        /* \"#utility.yul\":2250:2256   */\n      dup2\n        /* \"#utility.yul\":2237:2257   */\n      calldataload\n        /* \"#utility.yul\":2228:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":2266:2299   */\n      tag_112\n        /* \"#utility.yul\":2293:2298   */\n      dup2\n        /* \"#utility.yul\":2266:2299   */\n      tag_73\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2166:2305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2311:2640   */\n    tag_22:\n        /* \"#utility.yul\":2370:2376   */\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2398:2405   */\n      dup5\n        /* \"#utility.yul\":2394:2417   */\n      sub\n        /* \"#utility.yul\":2390:2422   */\n      slt\n        /* \"#utility.yul\":2387:2506   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2425:2504   */\n      tag_115\n      tag_63\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2387:2506   */\n    tag_114:\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2570:2623   */\n      tag_116\n        /* \"#utility.yul\":2615:2622   */\n      dup5\n        /* \"#utility.yul\":2606:2612   */\n      dup3\n        /* \"#utility.yul\":2595:2604   */\n      dup6\n        /* \"#utility.yul\":2591:2613   */\n      add\n        /* \"#utility.yul\":2570:2623   */\n      tag_74\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2560:2623   */\n      swap2\n      pop\n        /* \"#utility.yul\":2516:2633   */\n      pop\n        /* \"#utility.yul\":2311:2640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2764   */\n    tag_75:\n        /* \"#utility.yul\":2733:2757   */\n      tag_118\n        /* \"#utility.yul\":2751:2756   */\n      dup2\n        /* \"#utility.yul\":2733:2757   */\n      tag_72\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2728:2731   */\n      dup3\n        /* \"#utility.yul\":2721:2758   */\n      mstore\n        /* \"#utility.yul\":2646:2764   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2770:2869   */\n    tag_76:\n        /* \"#utility.yul\":2822:2828   */\n      0x00\n        /* \"#utility.yul\":2856:2861   */\n      dup2\n        /* \"#utility.yul\":2850:2862   */\n      mload\n        /* \"#utility.yul\":2840:2862   */\n      swap1\n      pop\n        /* \"#utility.yul\":2770:2869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2875:3044   */\n    tag_77:\n        /* \"#utility.yul\":2959:2970   */\n      0x00\n        /* \"#utility.yul\":2993:2999   */\n      dup3\n        /* \"#utility.yul\":2988:2991   */\n      dup3\n        /* \"#utility.yul\":2981:3000   */\n      mstore\n        /* \"#utility.yul\":3033:3037   */\n      0x20\n        /* \"#utility.yul\":3028:3031   */\n      dup3\n        /* \"#utility.yul\":3024:3038   */\n      add\n        /* \"#utility.yul\":3009:3038   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:3044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3050:3189   */\n    tag_78:\n        /* \"#utility.yul\":3139:3145   */\n      dup3\n        /* \"#utility.yul\":3134:3137   */\n      dup2\n        /* \"#utility.yul\":3129:3132   */\n      dup4\n        /* \"#utility.yul\":3123:3146   */\n      mcopy\n        /* \"#utility.yul\":3180:3181   */\n      0x00\n        /* \"#utility.yul\":3171:3177   */\n      dup4\n        /* \"#utility.yul\":3166:3169   */\n      dup4\n        /* \"#utility.yul\":3162:3178   */\n      add\n        /* \"#utility.yul\":3155:3182   */\n      mstore\n        /* \"#utility.yul\":3050:3189   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3195:3297   */\n    tag_79:\n        /* \"#utility.yul\":3236:3242   */\n      0x00\n        /* \"#utility.yul\":3287:3289   */\n      0x1f\n        /* \"#utility.yul\":3283:3290   */\n      not\n        /* \"#utility.yul\":3278:3280   */\n      0x1f\n        /* \"#utility.yul\":3271:3276   */\n      dup4\n        /* \"#utility.yul\":3267:3281   */\n      add\n        /* \"#utility.yul\":3263:3291   */\n      and\n        /* \"#utility.yul\":3253:3291   */\n      swap1\n      pop\n        /* \"#utility.yul\":3195:3297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3680   */\n    tag_80:\n        /* \"#utility.yul\":3391:3394   */\n      0x00\n        /* \"#utility.yul\":3419:3458   */\n      tag_124\n        /* \"#utility.yul\":3452:3457   */\n      dup3\n        /* \"#utility.yul\":3419:3458   */\n      tag_76\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3474:3545   */\n      tag_125\n        /* \"#utility.yul\":3538:3544   */\n      dup2\n        /* \"#utility.yul\":3533:3536   */\n      dup6\n        /* \"#utility.yul\":3474:3545   */\n      tag_77\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3467:3545   */\n      swap4\n      pop\n        /* \"#utility.yul\":3554:3619   */\n      tag_126\n        /* \"#utility.yul\":3612:3618   */\n      dup2\n        /* \"#utility.yul\":3607:3610   */\n      dup6\n        /* \"#utility.yul\":3600:3604   */\n      0x20\n        /* \"#utility.yul\":3593:3598   */\n      dup7\n        /* \"#utility.yul\":3589:3605   */\n      add\n        /* \"#utility.yul\":3554:3619   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3644:3673   */\n      tag_127\n        /* \"#utility.yul\":3666:3672   */\n      dup2\n        /* \"#utility.yul\":3644:3673   */\n      tag_79\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3639:3642   */\n      dup5\n        /* \"#utility.yul\":3635:3674   */\n      add\n        /* \"#utility.yul\":3628:3674   */\n      swap2\n      pop\n        /* \"#utility.yul\":3395:3680   */\n      pop\n        /* \"#utility.yul\":3303:3680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4643   */\n    tag_25:\n        /* \"#utility.yul\":3959:3963   */\n      0x00\n        /* \"#utility.yul\":3997:4000   */\n      0xc0\n        /* \"#utility.yul\":3986:3995   */\n      dup3\n        /* \"#utility.yul\":3982:4001   */\n      add\n        /* \"#utility.yul\":3974:4001   */\n      swap1\n      pop\n        /* \"#utility.yul\":4011:4082   */\n      tag_129\n        /* \"#utility.yul\":4079:4080   */\n      0x00\n        /* \"#utility.yul\":4068:4077   */\n      dup4\n        /* \"#utility.yul\":4064:4081   */\n      add\n        /* \"#utility.yul\":4055:4061   */\n      dup10\n        /* \"#utility.yul\":4011:4082   */\n      tag_75\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4129:4138   */\n      dup2\n        /* \"#utility.yul\":4123:4127   */\n      dup2\n        /* \"#utility.yul\":4119:4139   */\n      sub\n        /* \"#utility.yul\":4114:4116   */\n      0x20\n        /* \"#utility.yul\":4103:4112   */\n      dup4\n        /* \"#utility.yul\":4099:4117   */\n      add\n        /* \"#utility.yul\":4092:4140   */\n      mstore\n        /* \"#utility.yul\":4157:4235   */\n      tag_130\n        /* \"#utility.yul\":4230:4234   */\n      dup2\n        /* \"#utility.yul\":4221:4227   */\n      dup9\n        /* \"#utility.yul\":4157:4235   */\n      tag_80\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4149:4235   */\n      swap1\n      pop\n        /* \"#utility.yul\":4282:4291   */\n      dup2\n        /* \"#utility.yul\":4276:4280   */\n      dup2\n        /* \"#utility.yul\":4272:4292   */\n      sub\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4256:4265   */\n      dup4\n        /* \"#utility.yul\":4252:4270   */\n      add\n        /* \"#utility.yul\":4245:4293   */\n      mstore\n        /* \"#utility.yul\":4310:4388   */\n      tag_131\n        /* \"#utility.yul\":4383:4387   */\n      dup2\n        /* \"#utility.yul\":4374:4380   */\n      dup8\n        /* \"#utility.yul\":4310:4388   */\n      tag_80\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4302:4388   */\n      swap1\n      pop\n        /* \"#utility.yul\":4398:4470   */\n      tag_132\n        /* \"#utility.yul\":4466:4468   */\n      0x60\n        /* \"#utility.yul\":4455:4464   */\n      dup4\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"#utility.yul\":4442:4448   */\n      dup7\n        /* \"#utility.yul\":4398:4470   */\n      tag_75\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4480:4553   */\n      tag_133\n        /* \"#utility.yul\":4548:4551   */\n      0x80\n        /* \"#utility.yul\":4537:4546   */\n      dup4\n        /* \"#utility.yul\":4533:4552   */\n      add\n        /* \"#utility.yul\":4524:4530   */\n      dup6\n        /* \"#utility.yul\":4480:4553   */\n      tag_75\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4563:4636   */\n      tag_134\n        /* \"#utility.yul\":4631:4634   */\n      0xa0\n        /* \"#utility.yul\":4620:4629   */\n      dup4\n        /* \"#utility.yul\":4616:4635   */\n      add\n        /* \"#utility.yul\":4607:4613   */\n      dup5\n        /* \"#utility.yul\":4563:4636   */\n      tag_71\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3686:4643   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4649:4829   */\n    tag_81:\n        /* \"#utility.yul\":4697:4774   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4694:4695   */\n      0x00\n        /* \"#utility.yul\":4687:4775   */\n      mstore\n        /* \"#utility.yul\":4794:4798   */\n      0x22\n        /* \"#utility.yul\":4791:4792   */\n      0x04\n        /* \"#utility.yul\":4784:4799   */\n      mstore\n        /* \"#utility.yul\":4818:4822   */\n      0x24\n        /* \"#utility.yul\":4815:4816   */\n      0x00\n        /* \"#utility.yul\":4808:4823   */\n      revert\n        /* \"#utility.yul\":4835:5155   */\n    tag_37:\n        /* \"#utility.yul\":4879:4885   */\n      0x00\n        /* \"#utility.yul\":4916:4917   */\n      0x02\n        /* \"#utility.yul\":4910:4914   */\n      dup3\n        /* \"#utility.yul\":4906:4918   */\n      div\n        /* \"#utility.yul\":4896:4918   */\n      swap1\n      pop\n        /* \"#utility.yul\":4963:4964   */\n      0x01\n        /* \"#utility.yul\":4957:4961   */\n      dup3\n        /* \"#utility.yul\":4953:4965   */\n      and\n        /* \"#utility.yul\":4984:5002   */\n      dup1\n        /* \"#utility.yul\":4974:5055   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":5040:5044   */\n      0x7f\n        /* \"#utility.yul\":5032:5038   */\n      dup3\n        /* \"#utility.yul\":5028:5045   */\n      and\n        /* \"#utility.yul\":5018:5045   */\n      swap2\n      pop\n        /* \"#utility.yul\":4974:5055   */\n    tag_137:\n        /* \"#utility.yul\":5102:5104   */\n      0x20\n        /* \"#utility.yul\":5094:5100   */\n      dup3\n        /* \"#utility.yul\":5091:5105   */\n      lt\n        /* \"#utility.yul\":5071:5089   */\n      dup2\n        /* \"#utility.yul\":5068:5106   */\n      sub\n        /* \"#utility.yul\":5065:5149   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":5121:5139   */\n      tag_139\n      tag_81\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5065:5149   */\n    tag_138:\n        /* \"#utility.yul\":4886:5155   */\n      pop\n        /* \"#utility.yul\":4835:5155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d1de49146d69e156c7f131d1c9473d5d1cbb96857aac5e68043bf1602accd02864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610750806101bc5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063372c12b114610059578063715018a6146100895780638da5cb5b14610093578063f24f9459146100b1578063f2fde38b146100e6575b5f5ffd5b610073600480360381019061006e91906104ed565b610102565b6040516100809190610532565b60405180910390f35b61009161011f565b005b61009b610132565b6040516100a8919061055a565b60405180910390f35b6100cb60048036038101906100c691906105a6565b610159565b6040516100dd96959493929190610650565b60405180910390f35b61010060048036038101906100fb91906104ed565b6102bc565b005b6002602052805f5260405f205f915054906101000a900460ff1681565b610127610340565b6101305f6103c7565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f91509050805f01549080600101805461017e906106ea565b80601f01602080910402602001604051908101604052809291908181526020018280546101aa906106ea565b80156101f55780601f106101cc576101008083540402835291602001916101f5565b820191905f5260205f20905b8154815290600101906020018083116101d857829003601f168201915b50505050509080600201805461020a906106ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610236906106ea565b80156102815780601f1061025857610100808354040283529160200191610281565b820191905f5260205f20905b81548152906001019060200180831161026457829003601f168201915b505050505090806004015490806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6102c4610340565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610334575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161032b919061055a565b60405180910390fd5b61033d816103c7565b50565b610348610488565b73ffffffffffffffffffffffffffffffffffffffff16610366610132565b73ffffffffffffffffffffffffffffffffffffffff16146103c557610389610488565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103bc919061055a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104bc82610493565b9050919050565b6104cc816104b2565b81146104d6575f5ffd5b50565b5f813590506104e7816104c3565b92915050565b5f602082840312156105025761050161048f565b5b5f61050f848285016104d9565b91505092915050565b5f8115159050919050565b61052c81610518565b82525050565b5f6020820190506105455f830184610523565b92915050565b610554816104b2565b82525050565b5f60208201905061056d5f83018461054b565b92915050565b5f819050919050565b61058581610573565b811461058f575f5ffd5b50565b5f813590506105a08161057c565b92915050565b5f602082840312156105bb576105ba61048f565b5b5f6105c884828501610592565b91505092915050565b6105da81610573565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610622826105e0565b61062c81856105ea565b935061063c8185602086016105fa565b61064581610608565b840191505092915050565b5f60c0820190506106635f8301896105d1565b81810360208301526106758188610618565b905081810360408301526106898187610618565b905061069860608301866105d1565b6106a560808301856105d1565b6106b260a083018461054b565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061070157607f821691505b602082108103610714576107136106bd565b5b5091905056fea2646970667358221220d1de49146d69e156c7f131d1c9473d5d1cbb96857aac5e68043bf1602accd02864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x750 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF24F9459 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x11F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x130 PUSH0 PUSH2 0x3C7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x17E SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x20A SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x281 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x258 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x281 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x264 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x340 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x334 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33D DUP2 PUSH2 0x3C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x348 PUSH2 0x488 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x366 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5 JUMPI PUSH2 0x389 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0x493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E7 DUP2 PUSH2 0x4C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x502 JUMPI PUSH2 0x501 PUSH2 0x48F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x50F DUP5 DUP3 DUP6 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x518 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D PUSH0 DUP4 ADD DUP5 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x585 DUP2 PUSH2 0x573 JUMP JUMPDEST DUP2 EQ PUSH2 0x58F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x57C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x48F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5C8 DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x573 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x622 DUP3 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x62C DUP2 DUP6 PUSH2 0x5EA JUMP JUMPDEST SWAP4 POP PUSH2 0x63C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x645 DUP2 PUSH2 0x608 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x663 PUSH0 DUP4 ADD DUP10 PUSH2 0x5D1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x675 DUP2 DUP9 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x689 DUP2 DUP8 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP PUSH2 0x698 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x6A5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x6B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x54B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x701 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0xDE49 EQ PUSH14 0x69E156C7F131D1C9473D5D1CBB96 DUP6 PUSH27 0xAC5E68043BF1602ACCD02864736F6C634300081E00330000000000 ",
							"sourceMap": "116:855:2:-:0;;;;;;;;;;;;;148:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;116:855:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;116:855:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 832,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1160,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 967,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@findGameById_210": {
									"entryPoint": 345,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 306,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 287,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 700,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whiteList_214": {
									"entryPoint": 258,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5158:3",
										"nodeType": "YulBlock",
										"src": "0:5158:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1218:48:3",
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nativeSrc": "1228:32:3",
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nativeSrc": "1246:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nativeSrc": "1239:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:3",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:3",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nativeSrc": "1331:50:3",
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nativeSrc": "1353:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nativeSrc": "1341:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nativeSrc": "1341:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:3",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:3",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nativeSrc": "1479:118:3",
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nativeSrc": "1489:26:3",
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nativeSrc": "1497:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nativeSrc": "1572:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nativeSrc": "1525:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nativeSrc": "1525:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:3",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:3",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:3",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nativeSrc": "1668:53:3",
													"nodeType": "YulBlock",
													"src": "1668:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:3"
																		},
																		"nativeSrc": "1690:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:3"
																},
																"nativeSrc": "1678:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:3"
															},
															"nativeSrc": "1678:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:3",
														"nodeType": "YulTypedName",
														"src": "1656:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:3",
														"nodeType": "YulTypedName",
														"src": "1663:3:3",
														"type": ""
													}
												],
												"src": "1603:118:3"
											},
											{
												"body": {
													"nativeSrc": "1825:124:3",
													"nodeType": "YulBlock",
													"src": "1825:124:3",
													"statements": [
														{
															"nativeSrc": "1835:26:3",
															"nodeType": "YulAssignment",
															"src": "1835:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:3"
																},
																"nativeSrc": "1843:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nativeSrc": "1924:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:3"
																},
																"nativeSrc": "1871:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:3"
															},
															"nativeSrc": "1871:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:3",
														"nodeType": "YulTypedName",
														"src": "1797:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:3",
														"nodeType": "YulTypedName",
														"src": "1809:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:3",
														"nodeType": "YulTypedName",
														"src": "1820:4:3",
														"type": ""
													}
												],
												"src": "1727:222:3"
											},
											{
												"body": {
													"nativeSrc": "2000:32:3",
													"nodeType": "YulBlock",
													"src": "2000:32:3",
													"statements": [
														{
															"nativeSrc": "2010:16:3",
															"nodeType": "YulAssignment",
															"src": "2010:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "2021:5:3",
																"nodeType": "YulIdentifier",
																"src": "2021:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2010:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1955:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1982:5:3",
														"nodeType": "YulTypedName",
														"src": "1982:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1992:7:3",
														"nodeType": "YulTypedName",
														"src": "1992:7:3",
														"type": ""
													}
												],
												"src": "1955:77:3"
											},
											{
												"body": {
													"nativeSrc": "2081:79:3",
													"nodeType": "YulBlock",
													"src": "2081:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2138:16:3",
																"nodeType": "YulBlock",
																"src": "2138:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2147:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2147:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2150:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2140:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:3"
																			},
																			"nativeSrc": "2140:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2140:12:3"
																		},
																		"nativeSrc": "2140:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2140:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2104:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2104:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2129:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2129:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2111:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2111:17:3"
																				},
																				"nativeSrc": "2111:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2101:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2101:2:3"
																		},
																		"nativeSrc": "2101:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2094:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:3"
																},
																"nativeSrc": "2094:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2094:43:3"
															},
															"nativeSrc": "2091:63:3",
															"nodeType": "YulIf",
															"src": "2091:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2038:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2074:5:3",
														"nodeType": "YulTypedName",
														"src": "2074:5:3",
														"type": ""
													}
												],
												"src": "2038:122:3"
											},
											{
												"body": {
													"nativeSrc": "2218:87:3",
													"nodeType": "YulBlock",
													"src": "2218:87:3",
													"statements": [
														{
															"nativeSrc": "2228:29:3",
															"nodeType": "YulAssignment",
															"src": "2228:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2250:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2250:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2237:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2237:12:3"
																},
																"nativeSrc": "2237:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2237:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2228:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2266:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2266:26:3"
																},
																"nativeSrc": "2266:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2266:33:3"
															},
															"nativeSrc": "2266:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2266:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2166:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2196:6:3",
														"nodeType": "YulTypedName",
														"src": "2196:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2204:3:3",
														"nodeType": "YulTypedName",
														"src": "2204:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2212:5:3",
														"nodeType": "YulTypedName",
														"src": "2212:5:3",
														"type": ""
													}
												],
												"src": "2166:139:3"
											},
											{
												"body": {
													"nativeSrc": "2377:263:3",
													"nodeType": "YulBlock",
													"src": "2377:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2423:83:3",
																"nodeType": "YulBlock",
																"src": "2423:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2425:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2425:77:3"
																			},
																			"nativeSrc": "2425:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2425:79:3"
																		},
																		"nativeSrc": "2425:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2398:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2398:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2407:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2394:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:3"
																		},
																		"nativeSrc": "2394:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2419:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2390:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:3"
																},
																"nativeSrc": "2390:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2390:32:3"
															},
															"nativeSrc": "2387:119:3",
															"nodeType": "YulIf",
															"src": "2387:119:3"
														},
														{
															"nativeSrc": "2516:117:3",
															"nodeType": "YulBlock",
															"src": "2516:117:3",
															"statements": [
																{
																	"nativeSrc": "2531:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2531:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2545:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2535:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2535:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2560:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2560:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2595:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2595:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2606:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2606:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2591:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2591:3:3"
																				},
																				"nativeSrc": "2591:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2591:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2615:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2615:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2570:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2570:20:3"
																		},
																		"nativeSrc": "2570:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2570:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2560:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2560:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2311:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2347:9:3",
														"nodeType": "YulTypedName",
														"src": "2347:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2358:7:3",
														"nodeType": "YulTypedName",
														"src": "2358:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2370:6:3",
														"nodeType": "YulTypedName",
														"src": "2370:6:3",
														"type": ""
													}
												],
												"src": "2311:329:3"
											},
											{
												"body": {
													"nativeSrc": "2711:53:3",
													"nodeType": "YulBlock",
													"src": "2711:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2728:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2728:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2751:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2751:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2733:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2733:17:3"
																		},
																		"nativeSrc": "2733:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2721:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:3"
																},
																"nativeSrc": "2721:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2721:37:3"
															},
															"nativeSrc": "2721:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2721:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2646:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2699:5:3",
														"nodeType": "YulTypedName",
														"src": "2699:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2706:3:3",
														"nodeType": "YulTypedName",
														"src": "2706:3:3",
														"type": ""
													}
												],
												"src": "2646:118:3"
											},
											{
												"body": {
													"nativeSrc": "2829:40:3",
													"nodeType": "YulBlock",
													"src": "2829:40:3",
													"statements": [
														{
															"nativeSrc": "2840:22:3",
															"nodeType": "YulAssignment",
															"src": "2840:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2856:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2856:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2850:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2850:5:3"
																},
																"nativeSrc": "2850:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2850:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2840:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2840:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2770:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2812:5:3",
														"nodeType": "YulTypedName",
														"src": "2812:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2822:6:3",
														"nodeType": "YulTypedName",
														"src": "2822:6:3",
														"type": ""
													}
												],
												"src": "2770:99:3"
											},
											{
												"body": {
													"nativeSrc": "2971:73:3",
													"nodeType": "YulBlock",
													"src": "2971:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2988:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2988:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2993:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2993:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2981:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:3"
																},
																"nativeSrc": "2981:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2981:19:3"
															},
															"nativeSrc": "2981:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2981:19:3"
														},
														{
															"nativeSrc": "3009:29:3",
															"nodeType": "YulAssignment",
															"src": "3009:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3028:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3028:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3033:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3033:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3024:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:3"
																},
																"nativeSrc": "3024:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3024:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3009:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3009:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2875:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2943:3:3",
														"nodeType": "YulTypedName",
														"src": "2943:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2948:6:3",
														"nodeType": "YulTypedName",
														"src": "2948:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2959:11:3",
														"nodeType": "YulTypedName",
														"src": "2959:11:3",
														"type": ""
													}
												],
												"src": "2875:169:3"
											},
											{
												"body": {
													"nativeSrc": "3112:77:3",
													"nodeType": "YulBlock",
													"src": "3112:77:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3129:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3129:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3134:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3134:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3139:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3139:6:3"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3123:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3123:5:3"
																},
																"nativeSrc": "3123:23:3",
																"nodeType": "YulFunctionCall",
																"src": "3123:23:3"
															},
															"nativeSrc": "3123:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "3123:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "3166:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3166:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3171:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3162:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:3"
																		},
																		"nativeSrc": "3162:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3162:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3180:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3155:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:3"
																},
																"nativeSrc": "3155:27:3",
																"nodeType": "YulFunctionCall",
																"src": "3155:27:3"
															},
															"nativeSrc": "3155:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "3155:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3050:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3094:3:3",
														"nodeType": "YulTypedName",
														"src": "3094:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3099:3:3",
														"nodeType": "YulTypedName",
														"src": "3099:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3104:6:3",
														"nodeType": "YulTypedName",
														"src": "3104:6:3",
														"type": ""
													}
												],
												"src": "3050:139:3"
											},
											{
												"body": {
													"nativeSrc": "3243:54:3",
													"nodeType": "YulBlock",
													"src": "3243:54:3",
													"statements": [
														{
															"nativeSrc": "3253:38:3",
															"nodeType": "YulAssignment",
															"src": "3253:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3271:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3271:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3278:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3278:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3267:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:3"
																		},
																		"nativeSrc": "3267:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3287:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3287:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3283:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:3"
																		},
																		"nativeSrc": "3283:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3283:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3263:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:3"
																},
																"nativeSrc": "3263:28:3",
																"nodeType": "YulFunctionCall",
																"src": "3263:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3253:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3195:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3226:5:3",
														"nodeType": "YulTypedName",
														"src": "3226:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3236:6:3",
														"nodeType": "YulTypedName",
														"src": "3236:6:3",
														"type": ""
													}
												],
												"src": "3195:102:3"
											},
											{
												"body": {
													"nativeSrc": "3395:285:3",
													"nodeType": "YulBlock",
													"src": "3395:285:3",
													"statements": [
														{
															"nativeSrc": "3405:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3405:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3452:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3452:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3419:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "3419:32:3"
																},
																"nativeSrc": "3419:39:3",
																"nodeType": "YulFunctionCall",
																"src": "3419:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3409:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3409:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3467:78:3",
															"nodeType": "YulAssignment",
															"src": "3467:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3533:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3538:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3538:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3474:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3474:58:3"
																},
																"nativeSrc": "3474:71:3",
																"nodeType": "YulFunctionCall",
																"src": "3474:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3467:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3593:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3593:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3600:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3600:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3589:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3589:3:3"
																		},
																		"nativeSrc": "3589:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3607:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3612:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3554:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "3554:34:3"
																},
																"nativeSrc": "3554:65:3",
																"nodeType": "YulFunctionCall",
																"src": "3554:65:3"
															},
															"nativeSrc": "3554:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "3554:65:3"
														},
														{
															"nativeSrc": "3628:46:3",
															"nodeType": "YulAssignment",
															"src": "3628:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3639:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3666:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3666:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3644:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "3644:21:3"
																		},
																		"nativeSrc": "3644:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3644:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3635:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:3"
																},
																"nativeSrc": "3635:39:3",
																"nodeType": "YulFunctionCall",
																"src": "3635:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3628:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3303:377:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3376:5:3",
														"nodeType": "YulTypedName",
														"src": "3376:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3383:3:3",
														"nodeType": "YulTypedName",
														"src": "3383:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3391:3:3",
														"nodeType": "YulTypedName",
														"src": "3391:3:3",
														"type": ""
													}
												],
												"src": "3303:377:3"
											},
											{
												"body": {
													"nativeSrc": "3964:679:3",
													"nodeType": "YulBlock",
													"src": "3964:679:3",
													"statements": [
														{
															"nativeSrc": "3974:27:3",
															"nodeType": "YulAssignment",
															"src": "3974:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3986:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3997:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3982:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:3"
																},
																"nativeSrc": "3982:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3982:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3974:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4055:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4055:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4068:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4068:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4079:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4079:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4064:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4064:3:3"
																		},
																		"nativeSrc": "4064:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4064:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4011:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4011:43:3"
																},
																"nativeSrc": "4011:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4011:71:3"
															},
															"nativeSrc": "4011:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4011:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4103:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4103:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4114:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4114:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4099:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4099:3:3"
																		},
																		"nativeSrc": "4099:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4099:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4123:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4123:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4129:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4119:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:3"
																		},
																		"nativeSrc": "4119:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4092:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:3"
																},
																"nativeSrc": "4092:48:3",
																"nodeType": "YulFunctionCall",
																"src": "4092:48:3"
															},
															"nativeSrc": "4092:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "4092:48:3"
														},
														{
															"nativeSrc": "4149:86:3",
															"nodeType": "YulAssignment",
															"src": "4149:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4221:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4221:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4230:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4230:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4157:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "4157:63:3"
																},
																"nativeSrc": "4157:78:3",
																"nodeType": "YulFunctionCall",
																"src": "4157:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4149:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4149:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4256:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4267:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4267:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4252:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:3"
																		},
																		"nativeSrc": "4252:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4252:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4276:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4276:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4282:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4282:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4272:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:3"
																		},
																		"nativeSrc": "4272:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4272:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:3"
																},
																"nativeSrc": "4245:48:3",
																"nodeType": "YulFunctionCall",
																"src": "4245:48:3"
															},
															"nativeSrc": "4245:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "4245:48:3"
														},
														{
															"nativeSrc": "4302:86:3",
															"nodeType": "YulAssignment",
															"src": "4302:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4374:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4374:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4383:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4383:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4310:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "4310:63:3"
																},
																"nativeSrc": "4310:78:3",
																"nodeType": "YulFunctionCall",
																"src": "4310:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4302:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4302:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4442:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4442:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4455:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4466:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4466:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4451:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:3"
																		},
																		"nativeSrc": "4451:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4451:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4398:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4398:43:3"
																},
																"nativeSrc": "4398:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4398:72:3"
															},
															"nativeSrc": "4398:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4398:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4524:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4524:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4537:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4537:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4548:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4548:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4533:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4533:3:3"
																		},
																		"nativeSrc": "4533:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4533:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4480:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4480:43:3"
																},
																"nativeSrc": "4480:73:3",
																"nodeType": "YulFunctionCall",
																"src": "4480:73:3"
															},
															"nativeSrc": "4480:73:3",
															"nodeType": "YulExpressionStatement",
															"src": "4480:73:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "4607:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4607:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4620:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4631:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4631:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4616:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:3"
																		},
																		"nativeSrc": "4616:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4563:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4563:43:3"
																},
																"nativeSrc": "4563:73:3",
																"nodeType": "YulFunctionCall",
																"src": "4563:73:3"
															},
															"nativeSrc": "4563:73:3",
															"nodeType": "YulExpressionStatement",
															"src": "4563:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "3686:957:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3896:9:3",
														"nodeType": "YulTypedName",
														"src": "3896:9:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3908:6:3",
														"nodeType": "YulTypedName",
														"src": "3908:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3916:6:3",
														"nodeType": "YulTypedName",
														"src": "3916:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3924:6:3",
														"nodeType": "YulTypedName",
														"src": "3924:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3932:6:3",
														"nodeType": "YulTypedName",
														"src": "3932:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3940:6:3",
														"nodeType": "YulTypedName",
														"src": "3940:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3948:6:3",
														"nodeType": "YulTypedName",
														"src": "3948:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3959:4:3",
														"nodeType": "YulTypedName",
														"src": "3959:4:3",
														"type": ""
													}
												],
												"src": "3686:957:3"
											},
											{
												"body": {
													"nativeSrc": "4677:152:3",
													"nodeType": "YulBlock",
													"src": "4677:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4694:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4694:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4697:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4687:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:3"
																},
																"nativeSrc": "4687:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4687:88:3"
															},
															"nativeSrc": "4687:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4687:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4791:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4791:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4794:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4794:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4784:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:3"
																},
																"nativeSrc": "4784:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4784:15:3"
															},
															"nativeSrc": "4784:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4784:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4815:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4815:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4818:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4818:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4808:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4808:6:3"
																},
																"nativeSrc": "4808:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4808:15:3"
															},
															"nativeSrc": "4808:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4808:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4649:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4649:180:3"
											},
											{
												"body": {
													"nativeSrc": "4886:269:3",
													"nodeType": "YulBlock",
													"src": "4886:269:3",
													"statements": [
														{
															"nativeSrc": "4896:22:3",
															"nodeType": "YulAssignment",
															"src": "4896:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4910:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4910:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4916:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4916:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4906:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:3"
																},
																"nativeSrc": "4906:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4906:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4896:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:3"
																}
															]
														},
														{
															"nativeSrc": "4927:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4927:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4957:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4957:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4963:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4953:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4953:3:3"
																},
																"nativeSrc": "4953:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4953:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4931:18:3",
																	"nodeType": "YulTypedName",
																	"src": "4931:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5004:51:3",
																"nodeType": "YulBlock",
																"src": "5004:51:3",
																"statements": [
																	{
																		"nativeSrc": "5018:27:3",
																		"nodeType": "YulAssignment",
																		"src": "5018:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5032:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "5032:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5040:4:3",
																					"nodeType": "YulLiteral",
																					"src": "5040:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5028:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "5028:3:3"
																			},
																			"nativeSrc": "5028:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5028:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5018:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4984:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "4984:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4977:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:3"
																},
																"nativeSrc": "4977:26:3",
																"nodeType": "YulFunctionCall",
																"src": "4977:26:3"
															},
															"nativeSrc": "4974:81:3",
															"nodeType": "YulIf",
															"src": "4974:81:3"
														},
														{
															"body": {
																"nativeSrc": "5107:42:3",
																"nodeType": "YulBlock",
																"src": "5107:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5121:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5121:16:3"
																			},
																			"nativeSrc": "5121:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5121:18:3"
																		},
																		"nativeSrc": "5121:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5121:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5071:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "5071:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5094:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5102:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5102:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5091:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "5091:2:3"
																		},
																		"nativeSrc": "5091:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5068:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5068:2:3"
																},
																"nativeSrc": "5068:38:3",
																"nodeType": "YulFunctionCall",
																"src": "5068:38:3"
															},
															"nativeSrc": "5065:84:3",
															"nodeType": "YulIf",
															"src": "5065:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4835:320:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4870:4:3",
														"nodeType": "YulTypedName",
														"src": "4870:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4879:6:3",
														"nodeType": "YulTypedName",
														"src": "4879:6:3",
														"type": ""
													}
												],
												"src": "4835:320:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063372c12b114610059578063715018a6146100895780638da5cb5b14610093578063f24f9459146100b1578063f2fde38b146100e6575b5f5ffd5b610073600480360381019061006e91906104ed565b610102565b6040516100809190610532565b60405180910390f35b61009161011f565b005b61009b610132565b6040516100a8919061055a565b60405180910390f35b6100cb60048036038101906100c691906105a6565b610159565b6040516100dd96959493929190610650565b60405180910390f35b61010060048036038101906100fb91906104ed565b6102bc565b005b6002602052805f5260405f205f915054906101000a900460ff1681565b610127610340565b6101305f6103c7565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001602052805f5260405f205f91509050805f01549080600101805461017e906106ea565b80601f01602080910402602001604051908101604052809291908181526020018280546101aa906106ea565b80156101f55780601f106101cc576101008083540402835291602001916101f5565b820191905f5260205f20905b8154815290600101906020018083116101d857829003601f168201915b50505050509080600201805461020a906106ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610236906106ea565b80156102815780601f1061025857610100808354040283529160200191610281565b820191905f5260205f20905b81548152906001019060200180831161026457829003601f168201915b505050505090806004015490806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6102c4610340565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610334575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161032b919061055a565b60405180910390fd5b61033d816103c7565b50565b610348610488565b73ffffffffffffffffffffffffffffffffffffffff16610366610132565b73ffffffffffffffffffffffffffffffffffffffff16146103c557610389610488565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103bc919061055a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104bc82610493565b9050919050565b6104cc816104b2565b81146104d6575f5ffd5b50565b5f813590506104e7816104c3565b92915050565b5f602082840312156105025761050161048f565b5b5f61050f848285016104d9565b91505092915050565b5f8115159050919050565b61052c81610518565b82525050565b5f6020820190506105455f830184610523565b92915050565b610554816104b2565b82525050565b5f60208201905061056d5f83018461054b565b92915050565b5f819050919050565b61058581610573565b811461058f575f5ffd5b50565b5f813590506105a08161057c565b92915050565b5f602082840312156105bb576105ba61048f565b5b5f6105c884828501610592565b91505092915050565b6105da81610573565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610622826105e0565b61062c81856105ea565b935061063c8185602086016105fa565b61064581610608565b840191505092915050565b5f60c0820190506106635f8301896105d1565b81810360208301526106758188610618565b905081810360408301526106898187610618565b905061069860608301866105d1565b6106a560808301856105d1565b6106b260a083018461054b565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061070157607f821691505b602082108103610714576107136106bd565b5b5091905056fea2646970667358221220d1de49146d69e156c7f131d1c9473d5d1cbb96857aac5e68043bf1602accd02864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0xF24F9459 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x11F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x130 PUSH0 PUSH2 0x3C7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x17E SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x20A SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0x6EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x281 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x258 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x281 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x264 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x2C4 PUSH2 0x340 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x334 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x33D DUP2 PUSH2 0x3C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x348 PUSH2 0x488 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x366 PUSH2 0x132 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5 JUMPI PUSH2 0x389 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0x493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E7 DUP2 PUSH2 0x4C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x502 JUMPI PUSH2 0x501 PUSH2 0x48F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x50F DUP5 DUP3 DUP6 ADD PUSH2 0x4D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52C DUP2 PUSH2 0x518 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x545 PUSH0 DUP4 ADD DUP5 PUSH2 0x523 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D PUSH0 DUP4 ADD DUP5 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x585 DUP2 PUSH2 0x573 JUMP JUMPDEST DUP2 EQ PUSH2 0x58F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A0 DUP2 PUSH2 0x57C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x48F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5C8 DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0x573 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x622 DUP3 PUSH2 0x5E0 JUMP JUMPDEST PUSH2 0x62C DUP2 DUP6 PUSH2 0x5EA JUMP JUMPDEST SWAP4 POP PUSH2 0x63C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x645 DUP2 PUSH2 0x608 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x663 PUSH0 DUP4 ADD DUP10 PUSH2 0x5D1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x675 DUP2 DUP9 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x689 DUP2 DUP8 PUSH2 0x618 JUMP JUMPDEST SWAP1 POP PUSH2 0x698 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x6A5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x6B2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x54B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x701 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x714 JUMPI PUSH2 0x713 PUSH2 0x6BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0xDE49 EQ PUSH14 0x69E156C7F131D1C9473D5D1CBB96 DUP6 PUSH27 0xAC5E68043BF1602ACCD02864736F6C634300081E00330000000000 ",
							"sourceMap": "116:855:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:45:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;489:42:2;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;437:45:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:77::-;1992:7;2021:5;2010:16;;1955:77;;;:::o;2038:122::-;2111:24;2129:5;2111:24;:::i;:::-;2104:5;2101:35;2091:63;;2150:1;2147;2140:12;2091:63;2038:122;:::o;2166:139::-;2212:5;2250:6;2237:20;2228:29;;2266:33;2293:5;2266:33;:::i;:::-;2166:139;;;;:::o;2311:329::-;2370:6;2419:2;2407:9;2398:7;2394:23;2390:32;2387:119;;;2425:79;;:::i;:::-;2387:119;2545:1;2570:53;2615:7;2606:6;2595:9;2591:22;2570:53;:::i;:::-;2560:63;;2516:117;2311:329;;;;:::o;2646:118::-;2733:24;2751:5;2733:24;:::i;:::-;2728:3;2721:37;2646:118;;:::o;2770:99::-;2822:6;2856:5;2850:12;2840:22;;2770:99;;;:::o;2875:169::-;2959:11;2993:6;2988:3;2981:19;3033:4;3028:3;3024:14;3009:29;;2875:169;;;;:::o;3050:139::-;3139:6;3134:3;3129;3123:23;3180:1;3171:6;3166:3;3162:16;3155:27;3050:139;;;:::o;3195:102::-;3236:6;3287:2;3283:7;3278:2;3271:5;3267:14;3263:28;3253:38;;3195:102;;;:::o;3303:377::-;3391:3;3419:39;3452:5;3419:39;:::i;:::-;3474:71;3538:6;3533:3;3474:71;:::i;:::-;3467:78;;3554:65;3612:6;3607:3;3600:4;3593:5;3589:16;3554:65;:::i;:::-;3644:29;3666:6;3644:29;:::i;:::-;3639:3;3635:39;3628:46;;3395:285;3303:377;;;;:::o;3686:957::-;3959:4;3997:3;3986:9;3982:19;3974:27;;4011:71;4079:1;4068:9;4064:17;4055:6;4011:71;:::i;:::-;4129:9;4123:4;4119:20;4114:2;4103:9;4099:18;4092:48;4157:78;4230:4;4221:6;4157:78;:::i;:::-;4149:86;;4282:9;4276:4;4272:20;4267:2;4256:9;4252:18;4245:48;4310:78;4383:4;4374:6;4310:78;:::i;:::-;4302:86;;4398:72;4466:2;4455:9;4451:18;4442:6;4398:72;:::i;:::-;4480:73;4548:3;4537:9;4533:19;4524:6;4480:73;:::i;:::-;4563;4631:3;4620:9;4616:19;4607:6;4563:73;:::i;:::-;3686:957;;;;;;;;;:::o;4649:180::-;4697:77;4694:1;4687:88;4794:4;4791:1;4784:15;4818:4;4815:1;4808:15;4835:320;4879:6;4916:1;4910:4;4906:12;4896:22;;4963:1;4957:4;4953:12;4984:18;4974:81;;5040:4;5032:6;5028:17;5018:27;;4974:81;5102:2;5094:6;5091:14;5071:18;5068:38;5065:84;;5121:18;;:::i;:::-;5065:84;4886:269;4835:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "374400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"findGameById(uint256)": "infinite",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"whiteList(address)": "2811"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 148,
									"end": 158,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 116,
									"end": 971,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 116,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 971,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1de49146d69e156c7f131d1c9473d5d1cbb96857aac5e68043bf1602accd02864736f6c634300081e0033",
									".code": [
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "372C12B1"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "F24F9459"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 971,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 489,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 489,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 489,
											"end": 531,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 437,
											"end": 482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2111,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2266,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2422,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2425,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2425,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2387,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2615,
											"end": 2622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2591,
											"end": 2613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2570,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2570,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2623,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2646,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2751,
											"end": 2756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2733,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2733,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2728,
											"end": 2731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2646,
											"end": 2764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2770,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2959,
											"end": 2970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 2991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3189,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3050,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3139,
											"end": 3145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3132,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3146,
											"name": "MCOPY",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3162,
											"end": 3178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3297,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3195,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3283,
											"end": 3290,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3271,
											"end": 3276,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3263,
											"end": 3291,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3419,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3458,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3419,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3536,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3474,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3545,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3474,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3598,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3554,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3619,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3554,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3666,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3644,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3644,
											"end": 3673,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3644,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3395,
											"end": 3680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4000,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4064,
											"end": 4081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4061,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4011,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4082,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4011,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4119,
											"end": 4139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4116,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4140,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4230,
											"end": 4234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4221,
											"end": 4227,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4157,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4235,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4157,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4292,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4383,
											"end": 4387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4310,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4388,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4310,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4448,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4398,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4470,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4398,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4548,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4480,
											"end": 4553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4553,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4480,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4631,
											"end": 4634,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4613,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4563,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4636,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4563,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 4643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4649,
											"end": 4829,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4649,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4774,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4775,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4794,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4791,
											"end": 4792,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4784,
											"end": 4799,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4815,
											"end": 4816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4823,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5155,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4835,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4910,
											"end": 4914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4918,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4964,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4974,
											"end": 5055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5045,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5018,
											"end": 5045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4974,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5104,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5091,
											"end": 5105,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5106,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5065,
											"end": 5149,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5121,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5149,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5065,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 5155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 5155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BalanceGame.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"findGameById(uint256)": "f24f9459",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"whiteList(address)": "372c12b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"NewGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"votedAddress\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum BalanceGame.VoteOpttion\",\"name\":\"voteOpttion\",\"type\":\"uint8\"}],\"name\":\"NewVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"WhiteListUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"findGameById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"questionA\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"questionB\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteCountB\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BalanceGame.sol\":\"BalanceGame\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"BalanceGame.sol\":{\"keccak256\":\"0xc5e0e2a653302f42bd6e825cbc0e722741d34f223f35d2a4b0a30ae70127af6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://961c5f1369533d56d808b6fa191b2f744dd23acf82d379886c494703a1970e41\",\"dweb:/ipfs/QmU9THdPRVdw1xr9bqFJZ3YvTcwKJWYwfdtkn7irAmZRj9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "BalanceGame.sol:BalanceGame",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 210,
								"contract": "BalanceGame.sol:BalanceGame",
								"label": "findGameById",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Game)205_storage)"
							},
							{
								"astId": 214,
								"contract": "BalanceGame.sol:BalanceGame",
								"label": "whiteList",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(VoteOpttion)187": {
								"encoding": "inplace",
								"label": "enum BalanceGame.VoteOpttion",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(VoteOpttion)187)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum BalanceGame.VoteOpttion)",
								"numberOfBytes": "32",
								"value": "t_enum(VoteOpttion)187"
							},
							"t_mapping(t_uint256,t_struct(Game)205_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct BalanceGame.Game)",
								"numberOfBytes": "32",
								"value": "t_struct(Game)205_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Game)205_storage": {
								"encoding": "inplace",
								"label": "struct BalanceGame.Game",
								"members": [
									{
										"astId": 189,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 191,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "questionA",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 193,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "questionB",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 198,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "votes",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_enum(VoteOpttion)187)"
									},
									{
										"astId": 200,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "voteCountA",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 202,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "voteCountB",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 204,
										"contract": "BalanceGame.sol:BalanceGame",
										"label": "creator",
										"offset": 0,
										"slot": "6",
										"type": "t_address"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"BalanceGame.sol": {
				"ast": {
					"absolutePath": "BalanceGame.sol",
					"exportedSymbols": {
						"BalanceGame": [
							258
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 259,
							"sourceUnit": 148,
							"src": "60:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 182,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "148:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 183,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "152:6:2",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "148:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"140:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "140:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "140:19:2"
								}
							],
							"canonicalName": "BalanceGame",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258,
								147,
								177
							],
							"name": "BalanceGame",
							"nameLocation": "125:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BalanceGame.VoteOpttion",
									"id": 187,
									"members": [
										{
											"id": 185,
											"name": "A",
											"nameLocation": "187:1:2",
											"nodeType": "EnumValue",
											"src": "187:1:2"
										},
										{
											"id": 186,
											"name": "B",
											"nameLocation": "190:1:2",
											"nodeType": "EnumValue",
											"src": "190:1:2"
										}
									],
									"name": "VoteOpttion",
									"nameLocation": "173:11:2",
									"nodeType": "EnumDefinition",
									"src": "168:25:2"
								},
								{
									"canonicalName": "BalanceGame.Game",
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "232:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "224:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "224:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "questionA",
											"nameLocation": "252:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "245:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 190,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "245:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "questionB",
											"nameLocation": "279:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "272:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 192,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "272:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "votes",
											"nameLocation": "332:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "299:38:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOpttion_$187_$",
												"typeString": "mapping(address => enum BalanceGame.VoteOpttion)"
											},
											"typeName": {
												"id": 197,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "299:32:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOpttion_$187_$",
													"typeString": "mapping(address => enum BalanceGame.VoteOpttion)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 196,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 195,
														"name": "VoteOpttion",
														"nameLocations": [
															"319:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 187,
														"src": "319:11:2"
													},
													"referencedDeclaration": 187,
													"src": "319:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteOpttion_$187",
														"typeString": "enum BalanceGame.VoteOpttion"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "voteCountA",
											"nameLocation": "356:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "348:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "348:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 202,
											"mutability": "mutable",
											"name": "voteCountB",
											"nameLocation": "385:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "377:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "377:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "creator",
											"nameLocation": "414:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "406:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 203,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "406:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Game",
									"nameLocation": "208:4:2",
									"nodeType": "StructDefinition",
									"scope": 258,
									"src": "201:228:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f24f9459",
									"id": 210,
									"mutability": "mutable",
									"name": "findGameById",
									"nameLocation": "470:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "437:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$205_storage_$",
										"typeString": "mapping(uint256 => struct BalanceGame.Game)"
									},
									"typeName": {
										"id": 209,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "446:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "437:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$205_storage_$",
											"typeString": "mapping(uint256 => struct BalanceGame.Game)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 208,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 207,
												"name": "Game",
												"nameLocations": [
													"457:4:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 205,
												"src": "457:4:2"
											},
											"referencedDeclaration": 205,
											"src": "457:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Game_$205_storage_ptr",
												"typeString": "struct BalanceGame.Game"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "372c12b1",
									"id": 214,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "522:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 258,
									"src": "489:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 213,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 211,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "498:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "489:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 212,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "509:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a0b7f6f22bb4f69adc52dd16ffe2a964ab8b577be274247fa9a1547b03ce3e55",
									"id": 218,
									"name": "NewGame",
									"nameLocation": "546:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "570:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "554:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:24:2"
									},
									"src": "540:38:2"
								},
								{
									"anonymous": false,
									"eventSelector": "c3d0a9a6b35455d16c9e3adb338ea79787d3f8b663581f63947f79fe1bd6d678",
									"id": 227,
									"name": "NewVote",
									"nameLocation": "590:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "gameId",
												"nameLocation": "614:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "598:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "votedAddress",
												"nameLocation": "638:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "622:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "voteOpttion",
												"nameLocation": "672:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "652:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteOpttion_$187",
													"typeString": "enum BalanceGame.VoteOpttion"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "VoteOpttion",
														"nameLocations": [
															"652:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 187,
														"src": "652:11:2"
													},
													"referencedDeclaration": 187,
													"src": "652:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteOpttion_$187",
														"typeString": "enum BalanceGame.VoteOpttion"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:87:2"
									},
									"src": "584:101:2"
								},
								{
									"anonymous": false,
									"eventSelector": "111b0cdde6a17355dbeb5ce9b87078297fec9b61b51550540b0d4e2f1e4913c2",
									"id": 233,
									"name": "WhiteListUpdate",
									"nameLocation": "697:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "713:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "735:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "730:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:30:2"
									},
									"src": "691:52:2"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "776:80:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 236,
																"name": "whiteList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "795:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 239,
															"indexExpression": {
																"expression": {
																	"id": 237,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "805:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "809:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "805:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "795:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7957686974656c6973746564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0b4f8b801dffa64971b54c8fd3ea3dff77abb109b5e2e5121572930710ee59e",
																"typeString": "literal_string \"OnlyWhitelisted\""
															},
															"value": "OnlyWhitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0b4f8b801dffa64971b54c8fd3ea3dff77abb109b5e2e5121572930710ee59e",
																"typeString": "literal_string \"OnlyWhitelisted\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "787:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "787:49:2"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "847:1:2"
											}
										]
									},
									"id": 245,
									"name": "onlyWhitelisted",
									"nameLocation": "760:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:2"
									},
									"src": "751:105:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "884:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 248,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "906:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "910:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "906:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "918:9:2",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "906:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420456e6f756768204574686572",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "929:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
																"typeString": "literal_string \"Not Enough Ether\""
															},
															"value": "Not Enough Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
																"typeString": "literal_string \"Not Enough Ether\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "898:50:2"
											},
											{
												"id": 255,
												"nodeType": "PlaceholderStatement",
												"src": "959:1:2"
											}
										]
									},
									"id": 257,
									"name": "etherCheck",
									"nameLocation": "873:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:2"
									},
									"src": "864:104:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 259,
							"src": "116:855:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								218,
								227,
								233
							]
						}
					],
					"src": "33:939:2"
				},
				"id": 2
			}
		}
	}
}